package config;

import net.sf.ehcache.Cache;
import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.*;

/**
 * 后端缓存初始化
 * 配置缓存、字典暂不缓存
 */
public class CacheInit {

    //    private static final String dictSql = "SELECT T.DICT_CODE||'_'||T.CODE KEY , T.VALUE VALUE FROM SYS_SUBDICT T WHERE T.SFYX_ST = '1'";
    private static final String configSql = "SELECT C.CODE KEY, C.VALUE FROM SYS_CONFIG C WHERE C.SFYX_ST = '1' ";

    public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    private JdbcTemplate jdbcTemplate;

    public void init() {
        CacheManager cacheManager = CacheManager.getInstance();
        //缓存字典
        /*Cache cache = cacheManager.getCache(net.ruixin.util.cache.Cache.CONSTANT);
        List<Map<String, Object>> dicts = jdbcTemplate.queryForList(dictSql);
        cache.putAll(toElement(dicts));*/
        //缓存配置
        Cache cache = cacheManager.getCache(net.ruixin.util.cache.Cache.CONFIG);
        List<Map<String, Object>> configs = jdbcTemplate.queryForList(configSql);
        cache.putAll(toElement(configs));
    }

    private Collection<Element> toElement(List<Map<String, Object>> maps) {
        Set<Element> set = new HashSet<>();
        for (Map<String, Object> map : maps) {
            set.add(new Element(map.get("KEY"), map.get("VALUE")));
        }
        return set;
    }
}
